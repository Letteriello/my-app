[{"/home/Skynet/Documents/Python/my-app/my-app/src/index.js":"1","/home/Skynet/Documents/Python/my-app/my-app/src/theme.js":"2","/home/Skynet/Documents/Python/my-app/my-app/src/App.js":"3","/home/Skynet/Documents/Python/my-app/my-app/src/components/Home.js":"4","/home/Skynet/Documents/Python/my-app/my-app/src/components/Login.js":"5","/home/Skynet/Documents/Python/my-app/my-app/src/components/Register.js":"6","/home/Skynet/Documents/Python/my-app/my-app/src/components/PrivateRoute.js":"7","/home/Skynet/Documents/Python/my-app/my-app/src/components/Dashboard.js":"8","/home/Skynet/Documents/Python/my-app/my-app/src/firebaseConfig.js":"9","/home/Skynet/Documents/Python/my-app/my-app/src/components/UpdateProfile.js":"10","/home/Skynet/Documents/Python/my-app/my-app/src/components/Tasks.js":"11"},{"size":454,"mtime":1718202620094,"results":"12","hashOfConfig":"13"},{"size":344,"mtime":1718202620094,"results":"14","hashOfConfig":"13"},{"size":977,"mtime":1718202620090,"results":"15","hashOfConfig":"13"},{"size":1569,"mtime":1718204885598,"results":"16","hashOfConfig":"13"},{"size":1578,"mtime":1718202620090,"results":"17","hashOfConfig":"13"},{"size":2577,"mtime":1718202620094,"results":"18","hashOfConfig":"13"},{"size":437,"mtime":1718202620094,"results":"19","hashOfConfig":"13"},{"size":21671,"mtime":1718202620090,"results":"20","hashOfConfig":"13"},{"size":699,"mtime":1718202620094,"results":"21","hashOfConfig":"13"},{"size":1781,"mtime":1718202620094,"results":"22","hashOfConfig":"13"},{"size":1429,"mtime":1718202620094,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tswvbm",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/Skynet/Documents/Python/my-app/my-app/src/index.js",[],"/home/Skynet/Documents/Python/my-app/my-app/src/theme.js",[],"/home/Skynet/Documents/Python/my-app/my-app/src/App.js",[],"/home/Skynet/Documents/Python/my-app/my-app/src/components/Home.js",[],"/home/Skynet/Documents/Python/my-app/my-app/src/components/Login.js",[],"/home/Skynet/Documents/Python/my-app/my-app/src/components/Register.js",[],"/home/Skynet/Documents/Python/my-app/my-app/src/components/PrivateRoute.js",[],"/home/Skynet/Documents/Python/my-app/my-app/src/components/Dashboard.js",["47"],"import React, { useEffect, useState } from 'react';\nimport { Container, Grid, Paper, Typography, Box, Card, CardContent, List, ListItem, ListItemIcon, ListItemText, Drawer, IconButton, AppBar, Toolbar, CssBaseline, Avatar, Divider, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, TextField, Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar, AreaChart, Area, PieChart, Pie, Cell, Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis } from 'recharts';\nimport HomeIcon from '@mui/icons-material/Home';\nimport FitnessCenterIcon from '@mui/icons-material/FitnessCenter';\nimport DirectionsRunIcon from '@mui/icons-material/DirectionsRun';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport DatePicker from '@mui/lab/DatePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport { signOut } from 'firebase/auth';\nimport { db, auth } from '../firebaseConfig';\nimport { collection, onSnapshot } from 'firebase/firestore';\nimport { toast } from 'react-toastify';\nimport UpdateProfile from './UpdateProfile';\nimport Tasks from './Tasks';\n\nconst data = [\n  { name: 'Aug 25', uv: 60, pv: 40 },\n  { name: 'Aug 26', uv: 65, pv: 55 },\n  { name: 'Aug 27', uv: 70, pv: 60 },\n  { name: 'Aug 28', uv: 80, pv: 70 },\n  { name: 'Aug 29', uv: 85, pv: 75 },\n  { name: 'Aug 30', uv: 90, pv: 80 },\n  { name: 'Aug 31', uv: 95, pv: 85 },\n];\n\nconst activities = [\n  { id: 1, activity: 'Morning Walk', duration: '30 mins', calories: 150 },\n  { id: 2, activity: 'Yoga', duration: '45 mins', calories: 200 },\n  { id: 3, activity: 'Cycling', duration: '60 mins', calories: 400 },\n  { id: 4, activity: 'Gym', duration: '90 mins', calories: 600 },\n];\n\nconst activityDistribution = [\n  { name: 'Walk', value: 400 },\n  { name: 'Run', value: 300 },\n  { name: 'Bike', value: 300 },\n  { name: 'Swim', value: 200 },\n];\n\nconst healthAnalysis = [\n  { subject: 'Cardio', A: 120, fullMark: 150 },\n  { subject: 'Strength', A: 98, fullMark: 150 },\n  { subject: 'Flexibility', A: 86, fullMark: 150 },\n  { subject: 'Endurance', A: 99, fullMark: 150 },\n  { subject: 'Speed', A: 85, fullMark: 150 },\n  { subject: 'Balance', A: 65, fullMark: 150 },\n];\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst Item = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nconst drawerWidth = 280;\n\nconst Sidebar = ({ mobileOpen, handleDrawerToggle, navigate, user }) => (\n  <Drawer\n    variant=\"temporary\"\n    open={mobileOpen}\n    onClose={handleDrawerToggle}\n    ModalProps={{\n      keepMounted: true,\n    }}\n    sx={{\n      display: { xs: 'block', sm: 'none' },\n      '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth, backgroundColor: '#1976d2', color: '#ffffff' },\n    }}\n  >\n    <List>\n      <Box sx={{ p: 2, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <Avatar src={user?.photoURL || \"https://via.placeholder.com/150\"} sx={{ width: 80, height: 80, mb: 2 }} />\n        <Typography variant=\"h6\" color=\"white\">{user?.displayName || \"John Watson\"}</Typography>\n        <Typography variant=\"body2\" color=\"white\">{user?.email || \"example@example.com\"}</Typography>\n      </Box>\n      <Divider sx={{ my: 1 }} />\n      <ListItem button onClick={() => navigate('/')} key=\"home\">\n        <ListItemIcon sx={{ color: '#ffffff' }}>\n          <HomeIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Home\" />\n      </ListItem>\n      <ListItem button onClick={() => navigate('/dashboard')} key=\"dashboard\">\n        <ListItemIcon sx={{ color: '#ffffff' }}>\n          <FitnessCenterIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dashboard\" />\n      </ListItem>\n      <ListItem button onClick={() => navigate('/register')} key=\"register\">\n        <ListItemIcon sx={{ color: '#ffffff' }}>\n          <DirectionsRunIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Register\" />\n      </ListItem>\n      <ListItem button onClick={() => navigate('/login')} key=\"login\">\n        <ListItemIcon sx={{ color: '#ffffff' }}>\n          <AssessmentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Login\" />\n      </ListItem>\n      <ListItem button onClick={() => navigate('/update-profile')} key=\"update-profile\">\n        <ListItemIcon sx={{ color: '#ffffff' }}>\n          <HomeIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Update Profile\" />\n      </ListItem>\n      <ListItem button onClick={() => navigate('/tasks')} key=\"tasks\">\n        <ListItemIcon sx={{ color: '#ffffff' }}>\n          <HomeIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Tasks\" />\n      </ListItem>\n      <ListItem button onClick={() => {\n        signOut(auth).then(() => navigate('/login'));\n      }} key=\"logout\">\n        <ListItemIcon sx={{ color: '#ffffff' }}>\n          <LogoutIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Logout\" />\n      </ListItem>\n    </List>\n  </Drawer>\n);\n\nconst PermanentSidebar = ({ open, handleDrawerToggle, navigate, user }) => (\n  <Drawer\n    variant=\"persistent\"\n    open={open}\n    sx={{\n      '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth, backgroundColor: '#1976d2', color: '#ffffff' },\n    }}\n  >\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '8px',\n      }}\n    >\n      <IconButton onClick={handleDrawerToggle}>\n        <ChevronLeftIcon sx={{ color: '#ffffff' }} />\n      </IconButton>\n    </Box>\n    <Divider sx={{ my: 1 }} />\n    <List>\n      <Box sx={{ p: 2, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <Avatar src={user?.photoURL || \"https://via.placeholder.com/150\"} sx={{ width: 80, height: 80, mb: 2 }} />\n        <Typography variant=\"h6\" color=\"white\">{user?.displayName || \"John Watson\"}</Typography>\n        <Typography variant=\"body2\" color=\"white\">{user?.email || \"example@example.com\"}</Typography>\n      </Box>\n      <Divider sx={{ my: 1 }} />\n      <ListItem button onClick={() => navigate('/')} key=\"home\">\n        <ListItemIcon sx={{ color: '#ffffff' }}>\n          <HomeIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Home\" />\n      </ListItem>\n      <ListItem button onClick={() => navigate('/dashboard')} key=\"dashboard\">\n        <ListItemIcon sx={{ color: '#ffffff' }}>\n          <FitnessCenterIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dashboard\" />\n      </ListItem>\n      <ListItem button onClick={() => navigate('/register')} key=\"register\">\n        <ListItemIcon sx={{ color: '#ffffff' }}>\n          <DirectionsRunIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Register\" />\n      </ListItem>\n      <ListItem button onClick={() => navigate('/login')} key=\"login\">\n        <ListItemIcon sx={{ color: '#ffffff' }}>\n          <AssessmentIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Login\" />\n      </ListItem>\n      <ListItem button onClick={() => navigate('/update-profile')} key=\"update-profile\">\n        <ListItemIcon sx={{ color: '#ffffff' }}>\n          <HomeIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Update Profile\" />\n      </ListItem>\n      <ListItem button onClick={() => navigate('/tasks')} key=\"tasks\">\n        <ListItemIcon sx={{ color: '#ffffff' }}>\n          <HomeIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Tasks\" />\n      </ListItem>\n      <ListItem button onClick={() => {\n        signOut(auth).then(() => navigate('/login'));\n      }} key=\"logout\">\n        <ListItemIcon sx={{ color: '#ffffff' }}>\n          <LogoutIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Logout\" />\n      </ListItem>\n    </List>\n  </Drawer>\n);\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  background: `linear-gradient(135deg, ${theme.palette.primary.main} 30%, ${theme.palette.secondary.main} 90%)`,\n  color: '#ffffff',\n  boxShadow: theme.shadows[4],\n  transition: 'transform 0.3s ease-in-out',\n  '&:hover': {\n    transform: 'translateY(-5px)',\n  },\n  marginBottom: theme.spacing(2),\n}));\n\nconst Dashboard = () => {\n  const [drawerOpen, setDrawerOpen] = useState(true);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        navigate('/login');\n      }\n    });\n\n    return () => unsubscribe();\n  }, [navigate]);\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(collection(db, 'notifications'), (snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n        if (change.type === 'added') {\n          const notification = change.doc.data();\n          toast(notification.message);\n        }\n      });\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const handleDrawerToggle = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            Dashboard\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Sidebar mobileOpen={!drawerOpen} handleDrawerToggle={handleDrawerToggle} navigate={navigate} user={user} />\n      <PermanentSidebar open={drawerOpen} handleDrawerToggle={handleDrawerToggle} navigate={navigate} user={user} />\n      <Box\n        component=\"main\"\n        sx={{\n          flexGrow: 1,\n          p: 3,\n          width: { sm: `calc(100% - ${drawerWidth}px)` },\n          overflow: 'auto',\n        }}\n      >\n        <Toolbar />\n        <Container maxWidth=\"lg\">\n          <Routes>\n            <Route path=\"/update-profile\" element={<UpdateProfile />} />\n            <Route path=\"/tasks\" element={<Tasks />} />\n            <Route path=\"/\" element={\n              <Grid container spacing={3}>\n                {/* Cards */}\n                <Grid item xs={12} sm={6} md={3}>\n                  <StyledCard>\n                    <CardContent>\n                      <Typography variant=\"h5\" component=\"div\">\n                        95 bpm\n                      </Typography>\n                      <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                        Heart Rate\n                      </Typography>\n                    </CardContent>\n                  </StyledCard>\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <StyledCard>\n                    <CardContent>\n                      <Typography variant=\"h5\" component=\"div\">\n                        2064\n                      </Typography>\n                      <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                        Steps\n                      </Typography>\n                    </CardContent>\n                  </StyledCard>\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <StyledCard>\n                    <CardContent>\n                      <Typography variant=\"h5\" component=\"div\">\n                        1131 kcal\n                      </Typography>\n                      <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                        Calories\n                      </Typography>\n                    </CardContent>\n                  </StyledCard>\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <StyledCard>\n                    <CardContent>\n                      <Typography variant=\"h5\" component=\"div\">\n                        5h 3m\n                      </Typography>\n                      <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                        Sleep\n                      </Typography>\n                    </CardContent>\n                  </StyledCard>\n                </Grid>\n\n                {/* Line Chart */}\n                <Grid item xs={12}>\n                  <Item>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Activity Statistics\n                    </Typography>\n                    <Box sx={{ width: '100%', height: 300 }}>\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <LineChart\n                          data={data}\n                          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                        >\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend />\n                          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#ff7300\" activeDot={{ r: 8 }} />\n                          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#387908\" />\n                        </LineChart>\n                      </ResponsiveContainer>\n                    </Box>\n                  </Item>\n                </Grid>\n\n                {/* Bar Chart */}\n                <Grid item xs={12}>\n                  <Item>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Calorie Burn Statistics\n                    </Typography>\n                    <Box sx={{ width: '100%', height: 300 }}>\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <BarChart\n                          data={data}\n                          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                        >\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend />\n                          <Bar dataKey=\"uv\" fill=\"#8884d8\" />\n                          <Bar dataKey=\"pv\" fill=\"#82ca9d\" />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </Box>\n                  </Item>\n                </Grid>\n\n                {/* Area Chart */}\n                <Grid item xs={12}>\n                  <Item>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Sleep Statistics\n                    </Typography>\n                    <Box sx={{ width: '100%', height: 300 }}>\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <AreaChart\n                          data={data}\n                          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                        >\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend />\n                          <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                          <Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </Box>\n                  </Item>\n                </Grid>\n\n                {/* Pie Chart */}\n                <Grid item xs={12} md={6}>\n                  <Item>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Activity Distribution\n                    </Typography>\n                    <Box sx={{ width: '100%', height: 300 }}>\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <PieChart>\n                          <Pie\n                            data={activityDistribution}\n                            cx=\"50%\"\n                            cy=\"50%\"\n                            labelLine={false}\n                            label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n                            outerRadius={80}\n                            fill=\"#8884d8\"\n                            dataKey=\"value\"\n                          >\n                            {activityDistribution.map((entry, index) => (\n                              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                            ))}\n                          </Pie>\n                          <Tooltip />\n                          <Legend />\n                        </PieChart>\n                      </ResponsiveContainer>\n                    </Box>\n                  </Item>\n                </Grid>\n\n                {/* Radar Chart */}\n                <Grid item xs={12} md={6}>\n                  <Item>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Health Analysis\n                    </Typography>\n                    <Box sx={{ width: '100%', height: 300 }}>\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={healthAnalysis}>\n                          <PolarGrid />\n                          <PolarAngleAxis dataKey=\"subject\" />\n                          <PolarRadiusAxis />\n                          <Radar name=\"Health\" dataKey=\"A\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} />\n                          <Tooltip />\n                        </RadarChart>\n                      </ResponsiveContainer>\n                    </Box>\n                  </Item>\n                </Grid>\n\n                {/* Date Picker */}\n                <Grid item xs={12}>\n                  <Item>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Filter Activities by Date\n                    </Typography>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                      <DatePicker\n                        label=\"Select Date\"\n                        value={selectedDate}\n                        onChange={(newValue) => {\n                          setSelectedDate(newValue);\n                        }}\n                        renderInput={(params) => <TextField {...params} />}\n                      />\n                    </LocalizationProvider>\n                  </Item>\n                </Grid>\n\n                {/* Activities Table */}\n                <Grid item xs={12}>\n                  <Item>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Recent Activities\n                    </Typography>\n                    <TableContainer>\n                      <Table>\n                        <TableHead>\n                          <TableRow>\n                            <TableCell>Activity</TableCell>\n                            <TableCell>Duration</TableCell>\n                            <TableCell>Calories</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {activities.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((activity) => (\n                            <TableRow key={activity.id}>\n                              <TableCell>{activity.activity}</TableCell>\n                              <TableCell>{activity.duration}</TableCell>\n                              <TableCell>{activity.calories}</TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                    <TablePagination\n                      rowsPerPageOptions={[5, 10, 25]}\n                      component=\"div\"\n                      count={activities.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      onPageChange={handleChangePage}\n                      onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                  </Item>\n                </Grid>\n\n                {/* Journals */}\n                <Grid item xs={12} md={4}>\n                  <Item>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Journals\n                    </Typography>\n                    <Typography variant=\"body1\">Morning Walk: 30 mins</Typography>\n                    <Typography variant=\"body1\">Water Taken: 4 Glasses</Typography>\n                    <Typography variant=\"body1\">Breakfast: Milk, Bread, Banana</Typography>\n                    <Typography variant=\"body1\">Snack: Biscuits, Apple, Peas</Typography>\n                  </Item>\n                </Grid>\n              </Grid>\n            } />\n          </Routes>\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Dashboard;\n\n","/home/Skynet/Documents/Python/my-app/my-app/src/firebaseConfig.js",[],"/home/Skynet/Documents/Python/my-app/my-app/src/components/UpdateProfile.js",[],"/home/Skynet/Documents/Python/my-app/my-app/src/components/Tasks.js",[],{"ruleId":"48","severity":1,"message":"49","line":2,"column":275,"nodeType":"50","messageId":"51","endLine":2,"endColumn":281},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar"]