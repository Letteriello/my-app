{"ast":null,"code":"var _jsxFileName = \"/home/Skynet/Documents/Python/Projeto/my-app/src/components/Register.js\",\n  _s = $RefreshSig$();\n// Register.js\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, Paper } from '@mui/material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport RegisterForm from './RegisterForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async values => {\n    setIsLoading(true);\n    console.log(\"Enviando dados de registro:\", values); // Adiciona log\n    const response = await fetch('http://localhost:5000/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(values)\n    });\n    const data = await response.json();\n    setIsLoading(false);\n    console.log(\"Resposta do servidor:\", data); // Adiciona log\n    if (response.ok) {\n      toast.success(data.message || 'Usuário registrado com sucesso!');\n      navigate('/dashboard'); // Redireciona para a tela do dashboard após o registro bem-sucedido\n    } else {\n      toast.error(data.message || 'Erro ao registrar');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        padding: 4,\n        marginTop: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: t('Formulário Pessoal')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: t('Registrar')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RegisterForm, {\n          isLoading: isLoading,\n          onSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"rX3dbFpFDdgeXSuFJbQ148kU1zQ=\", false, function () {\n  return [useTranslation, useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useTranslation","useNavigate","Container","Typography","Box","Paper","ToastContainer","toast","RegisterForm","jsxDEV","_jsxDEV","Register","_s","t","navigate","isLoading","setIsLoading","handleSubmit","values","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","ok","success","message","error","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","elevation","sx","padding","marginTop","variant","gutterBottom","onSubmit","_c","$RefreshReg$"],"sources":["/home/Skynet/Documents/Python/Projeto/my-app/src/components/Register.js"],"sourcesContent":["// Register.js\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, Paper } from '@mui/material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport RegisterForm from './RegisterForm';\n\nconst Register = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (values) => {\n    setIsLoading(true);\n    console.log(\"Enviando dados de registro:\", values);  // Adiciona log\n    const response = await fetch('http://localhost:5000/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(values)\n    });\n    const data = await response.json();\n    setIsLoading(false);\n    console.log(\"Resposta do servidor:\", data);  // Adiciona log\n    if (response.ok) {\n      toast.success(data.message || 'Usuário registrado com sucesso!');\n      navigate('/dashboard'); // Redireciona para a tela do dashboard após o registro bem-sucedido\n    } else {\n      toast.error(data.message || 'Erro ao registrar');\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <ToastContainer />\n      <Paper elevation={3} sx={{ padding: 4, marginTop: 4 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          {t('Formulário Pessoal')}\n        </Typography>\n        <Box>\n          <Typography variant=\"h6\">{t('Registrar')}</Typography>\n          <RegisterForm isLoading={isLoading} onSubmit={handleSubmit} />\n        </Box>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}